merge.js
========
Benson Wong <mostlygeek@gmail.com>

About
-----
Extendable.js is a really simple JavaScript library for organizing a
JavaScript project. Its design is heavily influenced by the provides()
functionality of the Facebook connect-js project:
https://github.com/facebook/connect-js.

The core design philosophy is to simplify managing, developing and debugging
your JS application. Extendable.js makes it easy to build a JS namespace for
your application with code split into separate, manageable source files.

In production, merge all of your JS files together and minimize them. Since
functionality is added to the namespace through the extend() method there
should not be any problems caused by the merging process.

License
-------

MIT. 
See: http://en.wikipedia.org/wiki/MIT_License

Usage
-----

.Basic Example

----
var App = new Extendable(); 
App.extend("My.Fantastic.Namespace", {
    foo : function() { 
        return "bar"; 
    }
});
App.My.Fantastic.Namespace.foo(); // returns "bar"
----

.Building a larger library
----
// file: src/js/main.js
app = new Extendable(); 
app.extend('', {                            // <1>
    // core stuff 
});

// file: src/js/UI.js                       // <2>
app.extend('UI', {
    // UI related functionality
});

app.extend('UI.misc', {
    // app.UI.misc.x functionality
});
----

<1> Create the core of the namespace in a main.js file (or whatever you)
    wish to name it.
    
<2> Add more functionality to the namespace in separate JS files.
    This will make debugging easier and modularize things. 
